(defwidget profile [] 
    (box :orientation "h" :space-evenly "true" 
        (box :class "pfp")
        (box :class "username" "Rediet")))
(defwidget date [] 
    (box :orientation "v" :space-evenly "true" 
        (box :orientation "h" :class "time" 
            (box :class "hour" hour)
            (box :class "semicolon" ":")
            (box :class "minute" minute))
        (box :class "day" day)))
(defwidget player [] 
    (box :orientation "h" :space-evenly "true" 
        (box :orientation "v" :space-evenly "false"  
            (box :class "media-player" media_player)
            (box :class "song-art" :style "background-image: url('{{art}}');" :height 80 song_art))
        (box :class "song-data" :orientation "v" :space-evenly "false" 
            (box :class "song-title" :tooltip "${song_title_full} - ${ song_artist_full }" song_title)
            (box :class "song-artist" song_artist)
            (box :class "player-btn" :orientation "h" :halign "center" 
                (button :onclick "playerctl previous" :tooltip "Previous" "")
                (button :class "pause-play" :onclick "playerctl play-pause" :tooltip "Pause/Play" player_status)
                (button :onclick "playerctl next" :tooltip "Next" "")))))
(defwidget misc [] 
    <box orientation="v" space-evenly="true">
        ;;  (box :orientation "v" :space-evenly "false" notifications)
         (box :orientation "h" :class "sys-btns" :space-evenly "true" 
            (button :class "shutdown-btn" :tooltip "Shutdown" :onclick "~/.config/eww/scripts/shutdown" "")
             (button :class "reboot-btn" :tooltip "Reboot" :onclick "~/.config/eww/scripts/reboot" "")
            (button :class "lock-btn" :tooltip "Lock" :onclick "~/.config/eww/scripts/lockscreen" "")
            (button :class "suspend-btn" :tooltip "Suspend" :onclick "~/.config/eww/scripts/suspend" ""))
    </box>)
(defwidget notification [] 
    (box :orientation "v" :space-evenly "false" :style "background: black;" 
        (literal :content not_content :style "color: white; font-size: 22px")not_content))
(defwidget volume [] 
    (box :orientation "v" :space-evenly "false" :style "background: black; opacity: 0.8" 
        (button :style "margin: 6px 10px; opacity: 0;" :halign "end" :onclick "eww close volume" "")
        (box :class "vol-icon" :space-evenly "true" volume_icon)
        (box :orientation "h" :class "vol-progress" :space-evenly "false" 
            (scale :min 0 :max 100 :active "false" :value volume_master))))



;;  DATE VARS 
(defpoll minute :interval "10s"  "date \"+%M\"")
(defpoll hour :interval "5m"  "date \"+%H\"")
(defpoll day :interval "12h"  "~/.config/eww/scripts/getDay")

;;  PLAYER VARS 
(defpoll art :interval "5s"  "~/.config/eww/scripts/echoSongArt")
(defpoll song_art :interval "5s"  "~/.config/eww/scripts/getSongArt")
(defpoll song_title :interval "2s"  "~/.config/eww/scripts/getSongTitle")
(defpoll song_title_full :interval "2s"  "~/.config/eww/scripts/getFullSongTitle")
(defpoll song_artist :interval "2s"  "~/.config/eww/scripts/getSongArtist")
(defpoll song_artist_full :interval "2s"  "~/.config/eww/scripts/getFullSongArtist")
(defpoll player_status :interval "1s"  "~/.config/eww/scripts/getPlayerStatus")
(defpoll media_player :interval "1s"  "~/.config/eww/scripts/getPlayer")

;;  UTILS 
(defpoll volume_icon  "~/.config/eww/scripts/getvolIcon")
(defpoll volume_master  "~/.config/eww/scripts/getvol")
(defpoll volume_m :interval "1s"  "~/.config/eww/scripts/getVolumeH")
(defpoll notifications :interval "1s"  "~/.config/eww/scripts/getNotifs")

(defvar not_content)
(defwindow misc 
  :geometry (geometry :x "1005px" :y "375px" :width "355px" :height "390px")
          (misc))
(defwindow player 
  :geometry (geometry :x "1005px" :y "263px" :width "355px" :height "110px")
          (player))
(defwindow profile 
  :geometry (geometry :x "1005px" :y "161px" :width "355px" :height "100px")
          (profile))
(defwindow date 
  :geometry (geometry :x "1005px" :y "25px" :width "355px" :height "100px")
          (date))
(defwindow volume 
  :geometry (geometry :x "600px" :y "364px" :width "140px" :height "120px")
          (volume))
(defwindow notif 
  :geometry (geometry :x "0px" :y "0px" :width "140px" :height "120px")
          (notification))


